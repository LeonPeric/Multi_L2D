Lmod has detected the following error: These module(s) or extension(s) exist
but cannot be loaded as requested: "cuDNN"
   Try: "module spider cuDNN" to see how to load the module(s).



cuda:0
cuda:0
{'batch_size': 1024, 'alpha': 1.0, 'epochs': 100, 'patience': 20, 'expert_type': 'predict_biasedK', 'n_classes': 10, 'k': 5, 'n_experts': 2, 'lr': 0.1, 'weight_decay': 0.0005, 'warmup_epochs': 0, 'loss_type': 'softmax', 'ckp_dir': './softmax_increase_experts_prob/', 'experiment_name': 'multiple_experts'}
seed is 948
n is 1
torch.Size([9216]) torch.Size([9216, 11]) [torch.Size([9216])]
shapes: true labels torch.Size([9216]), confidences torch.Size([9216, 11]), expert_predictions (1, 9216)
Evaluate...
{'coverage': '8473 out of9216', 'system_accuracy': 87.92317708333333, 'expert_accuracy': 58.81559655031049, 'classifier_accuracy': 90.47562739908383, 'alone_classifier': 87.17447916666667, 'validation_loss': 1.896141701274448, 'n_experts': 1, 'expert_0': 58.81559655031049}
n is 4
torch.Size([9216]) torch.Size([9216, 14]) [torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216])]
shapes: true labels torch.Size([9216]), confidences torch.Size([9216, 14]), expert_predictions (4, 9216)
Evaluate...
{'coverage': '8317 out of9216', 'system_accuracy': 88.15104166666667, 'expert_accuracy': 59.95549277964566, 'classifier_accuracy': 91.19874845258208, 'alone_classifier': 87.14192708333333, 'validation_loss': 6.9862961769104, 'n_experts': 4, 'expert_0': 58.73285659833679, 'expert_1': 72.34011770162681, 'expert_2': 60.999878000243996, 'expert_3': 60.118976048838036}
n is 8
torch.Size([9216]) torch.Size([9216, 18]) [torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216])]
shapes: true labels torch.Size([9216]), confidences torch.Size([9216, 18]), expert_predictions (8, 9216)
Evaluate...
{'coverage': '8195 out of9216', 'system_accuracy': 88.55251736111111, 'expert_accuracy': 64.05483564058068, 'classifier_accuracy': 91.6046358559532, 'alone_classifier': 87.25043402777777, 'validation_loss': 15.429248597886827, 'n_experts': 8, 'expert_0': 71.42827988457191, 'expert_1': 0.0, 'expert_2': 61.11097530894375, 'expert_3': 70.9090586777006, 'expert_4': 61.79100788596544, 'expert_5': 41.999916000168, 'expert_6': 39.99840006399744, 'expert_7': 49.99500049995}
n is 12
torch.Size([9216]) torch.Size([9216, 22]) [torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216])]
shapes: true labels torch.Size([9216]), confidences torch.Size([9216, 22]), expert_predictions (12, 9216)
Evaluate...
{'coverage': '8232 out of9216', 'system_accuracy': 87.99913194444444, 'expert_accuracy': 60.67071937587005, 'classifier_accuracy': 91.26579092242723, 'alone_classifier': 86.93576388888889, 'validation_loss': 24.929069730970596, 'n_experts': 12, 'expert_0': 47.572723159760855, 'expert_1': 56.91047656833078, 'expert_2': 0.0, 'expert_3': 61.86430192491199, 'expert_4': 39.99840006399744, 'expert_5': 60.16938954340755, 'expert_6': 69.66286916639014, 'expert_7': 74.99625018749062, 'expert_8': 55.42850808170505, 'expert_9': 73.80917233727459, 'expert_10': 59.997600095996155, 'expert_11': 49.99958333680553}
n is 16
torch.Size([9216]) torch.Size([9216, 26]) [torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216])]
shapes: true labels torch.Size([9216]), confidences torch.Size([9216, 26]), expert_predictions (16, 9216)
Evaluate...
{'coverage': '8352 out of9216', 'system_accuracy': 88.76953125, 'expert_accuracy': 64.69905909744003, 'classifier_accuracy': 91.25957745139395, 'alone_classifier': 87.46744791666667, 'validation_loss': 35.372283935546875, 'n_experts': 16, 'expert_0': 0.0, 'expert_1': 68.58103474254409, 'expert_2': 24.99875006249687, 'expert_3': 61.76452422198758, 'expert_4': 48.14796982233399, 'expert_5': 59.997600095996155, 'expert_6': 67.618918821107, 'expert_7': 0.0, 'expert_8': 68.74978515692138, 'expert_9': 56.52124764132486, 'expert_10': 66.87889569567427, 'expert_11': 0.0, 'expert_12': 85.71183680466272, 'expert_13': 99.98000399920016, 'expert_14': 59.99940000599994, 'expert_15': 53.33315555614815}
n is 20
torch.Size([9216]) torch.Size([9216, 30]) [torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216]), torch.Size([9216])]
shapes: true labels torch.Size([9216]), confidences torch.Size([9216, 30]), expert_predictions (20, 9216)
Evaluate...
{'coverage': '8310 out of9216', 'system_accuracy': 88.89973958333333, 'expert_accuracy': 64.12802116379224, 'classifier_accuracy': 91.60048024548159, 'alone_classifier': 87.95572916666667, 'validation_loss': 46.232547760009766, 'n_experts': 20, 'expert_0': 0.0, 'expert_1': 41.463212374573786, 'expert_2': 62.49947917100691, 'expert_3': 0.0, 'expert_4': 99.98000399920016, 'expert_5': 99.9900009999, 'expert_6': 0.0, 'expert_7': 49.99500049995, 'expert_8': 54.999450005499945, 'expert_9': 48.21411352102314, 'expert_10': 68.18119835274224, 'expert_11': 65.59125679299613, 'expert_12': 0.0, 'expert_13': 60.60569329882849, 'expert_14': 73.33235556859242, 'expert_15': 61.40329332177782, 'expert_16': 0.0, 'expert_17': 61.320639017662224, 'expert_18': 74.34547188955823, 'expert_19': 65.56011156837214}
===Mean and Standard Error===
[87.92317708 88.15104167 88.55251736 87.99913194 88.76953125 88.89973958]
[nan nan nan nan nan nan]
/home/rverma/.conda/envs/defer/lib/python3.8/site-packages/numpy/core/_methods.py:261: RuntimeWarning: Degrees of freedom <= 0 for slice
  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/home/rverma/.conda/envs/defer/lib/python3.8/site-packages/numpy/core/_methods.py:250: RuntimeWarning: invalid value encountered in true_divide
  ret = um.true_divide(
